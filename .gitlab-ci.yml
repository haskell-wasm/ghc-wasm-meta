default:
  interruptible: true

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $UPSTREAM_GHC_FLAVOUR != null

variables:
  DOCKER_REV: 3618852f42dc1d3d8552fd2b173c482170f76ba6
  GIT_DEPTH: 1
  GIT_STRATEGY: clone

.x86_64-linux-ubuntu:
  tags:
    - x86_64-linux
  image: registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-ubuntu24_04:$DOCKER_REV
  rules:
    - if: $UPSTREAM_GHC_FLAVOUR == null
    - if: $UPSTREAM_GHC_FLAVOUR == $FLAVOUR
  variables:
    PLAYWRIGHT: 1
  before_script:
    - |
      sudo apt update
      sudo apt full-upgrade -y
      sudo apt install -y \
        zstd

      curl -f -L https://packages.mozilla.org/apt/repo-signing-key.gpg | sudo tee /usr/share/keyrings/packages.mozilla.org.asc
      echo "deb [signed-by=/usr/share/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee /etc/apt/sources.list.d/mozilla.list

      curl -f -L https://dl.google.com/linux/linux_signing_key.pub | sudo tee /usr/share/keyrings/google.asc
      echo "deb [signed-by=/usr/share/keyrings/google.asc] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list

      sudo apt update
      sudo apt install -y \
        google-chrome-stable
      sudo apt install -y --target-release=mozilla \
        firefox
    - sudo chown ghc:ghc -R .
    - |
      PREFIX=/tmp/.ghc-wasm ./setup.sh
      sed -i -e "s/\$ncpus/$CPUS/" /tmp/.ghc-wasm/.cabal/config
      . /tmp/.ghc-wasm/env

.x86_64-linux-ubuntu-head:
  extends: .x86_64-linux-ubuntu
  allow_failure: true
  script:
    - ./tests/ghci.sh
    - ./tests/canary.sh
    - ./tests/foundation.sh
    - ./tests/network.sh
    - ./tests/jsaddle-wasm.sh
    - ./tests/ghc-wasm-earthly.sh
    - ./tests/miso.sh
    - ./tests/reflex-dom.sh
    - ./tests/time.sh
    - ./tests/clock.sh
    - ./tests/unix-compat.sh
    - ./tests/hashtables.sh
    - ./tests/bzlib.sh
    - ./tests/hfsnotify.sh
    - ./tests/xxhash-ffi.sh
    - ./tests/misc.sh
    - ./tests/miso-reflex-examples.sh
    - ./tests/pandoc.sh
    - ./tests/tinyapl.sh
    - ./tests/agda.sh

x86_64-linux-ubuntu-gmp:
  extends: .x86_64-linux-ubuntu-head
  variables:
    FLAVOUR: gmp

x86_64-linux-ubuntu-native:
  extends: .x86_64-linux-ubuntu-head
  variables:
    FLAVOUR: native

x86_64-linux-ubuntu-unreg:
  extends: .x86_64-linux-ubuntu-head
  variables:
    FLAVOUR: unreg

x86_64-linux-ubuntu-9.6:
  extends: .x86_64-linux-ubuntu
  variables:
    FLAVOUR: "9.6"
  script:
    - ./tests/foundation.sh
    - ./tests/network.sh
    - ./tests/clock.sh
    - ./tests/bzlib.sh
    - ./tests/xxhash-ffi.sh
    - ./tests/misc.sh
    - ./tests/agda.sh

x86_64-linux-ubuntu-9.8:
  extends: .x86_64-linux-ubuntu
  variables:
    FLAVOUR: "9.8"
  script:
    - ./tests/foundation.sh
    - ./tests/time.sh
    - ./tests/network.sh
    - ./tests/clock.sh
    - ./tests/bzlib.sh
    - ./tests/xxhash-ffi.sh
    - ./tests/misc.sh
    - ./tests/agda.sh

x86_64-linux-ubuntu-9.10:
  extends: .x86_64-linux-ubuntu
  variables:
    FLAVOUR: "9.10"
  script:
    - ./tests/ghci.sh
    - ./tests/canary.sh
    - ./tests/foundation.sh
    - ./tests/network.sh
    - ./tests/jsaddle-wasm.sh
    - ./tests/ghc-wasm-earthly.sh
    - ./tests/miso.sh
    - ./tests/reflex-dom.sh
    - ./tests/time.sh
    - ./tests/clock.sh
    - ./tests/unix-compat.sh
    - ./tests/hashtables.sh
    - ./tests/bzlib.sh
    - ./tests/hfsnotify.sh
    - ./tests/xxhash-ffi.sh
    - ./tests/misc.sh
    - ./tests/miso-reflex-examples.sh
    - ./tests/pandoc.sh
    - ./tests/tinyapl.sh
    - ./tests/agda.sh

x86_64-linux-ubuntu-9.12:
  extends: .x86_64-linux-ubuntu
  variables:
    FLAVOUR: "9.12"
  script:
    - ./tests/ghci.sh
    - ./tests/canary.sh
    - ./tests/foundation.sh
    - ./tests/network.sh
    - ./tests/jsaddle-wasm.sh
    - ./tests/ghc-wasm-earthly.sh
    - ./tests/miso.sh
    - ./tests/reflex-dom.sh
    - ./tests/time.sh
    - ./tests/clock.sh
    - ./tests/unix-compat.sh
    - ./tests/hashtables.sh
    - ./tests/bzlib.sh
    - ./tests/hfsnotify.sh
    - ./tests/xxhash-ffi.sh
    - ./tests/misc.sh
    - ./tests/miso-reflex-examples.sh
    - ./tests/pandoc.sh
    - ./tests/tinyapl.sh
    - ./tests/agda.sh

x86_64-linux-chimera-9.12:
  tags:
    - x86_64-linux
  image: terrorjack/chimera:bash
  rules:
    - if: $UPSTREAM_GHC_FLAVOUR == null
  before_script:
    - |
      apk upgrade --no-interactive
      apk add --no-interactive \
        curl \
        firefox \
        gmake \
        jq \
        libarchive-progs
      cd /usr/bin
      ln -s bsdunzip unzip
      cd $OLDPWD
  script:
    - |
      PREFIX=/tmp/.ghc-wasm ./setup.sh
      sed -i "" "s/\$ncpus/$CPUS/" /tmp/.ghc-wasm/.cabal/config
      . /tmp/.ghc-wasm/env
    - ./tests/ghci.sh

.nix:
  rules:
    - if: $UPSTREAM_GHC_FLAVOUR == null
  variables:
    NIXPKGS_ALLOW_UNFREE: "1"
  script:
    - |
      nix build --json --no-link $NIX_FLAKE_OUTPUTS
      nix shell --impure $NIX_BROWSERS .#all_9_12 --command ./tests/ghci.sh
      nix shell --impure $NIX_BROWSERS .#all_9_10 --command ./tests/ghci.sh

.linux-nix:
  extends: .nix
  image: nixos/nix
  before_script:
    - echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
    - echo "cores = $CPUS" >> /etc/nix/nix.conf
    - echo "max-jobs = $CPUS" >> /etc/nix/nix.conf

x86_64-linux-nix:
  extends: .linux-nix
  tags:
    - x86_64-linux
  variables:
    NIX_FLAKE_OUTPUTS: .#all_gmp .#all_native .#all_unreg .#all_9_12 .#all_9_10 .#all_9_8 .#all_9_6
    NIX_BROWSERS: nixpkgs#firefox-bin nixpkgs#google-chrome

aarch64-linux-nix:
  extends: .linux-nix
  tags:
    - aarch64-linux
  variables:
    NIX_FLAKE_OUTPUTS: .#all_9_12 .#all_9_10
    NIX_BROWSERS: nixpkgs#firefox-bin

aarch64-darwin-nix:
  extends: .nix
  tags:
    - aarch64-darwin
  variables:
    NIX_FLAKE_OUTPUTS: .#all_9_12 .#all_9_10
    NIX_BROWSERS: nixpkgs#google-chrome

.ghcup:
  rules:
    - if: $UPSTREAM_GHC_FLAVOUR == null
  script:
    - |
      curl -f -L --retry 5 https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh
      . ~/.ghcup/env
      ghcup install cabal latest --set
    - |
      SKIP_GHC=1 ./setup.sh
      . ~/.ghc-wasm/env
    - |
      ghcup config add-release-channel file://$PWD/ghcup-wasm-0.0.9.yaml

      ghcup install ghc wasm32-wasi-9.12 -- $CONFIGURE_ARGS
      ghcup install ghc wasm32-wasi-9.10 -- $CONFIGURE_ARGS

      ghcup set ghc wasm32-wasi-9.12
      ./tests/ghci.sh

      ghcup set ghc wasm32-wasi-9.10
      ./tests/ghci.sh

.linux-ghcup:
  extends: .ghcup
  image: rockylinux:8
  before_script:
    - |
      dnf upgrade -y
      dnf install -y \
        epel-release
      crb enable
      dnf install -y \
        chromium \
        firefox \
        jq \
        make \
        unzip \
        zstd

x86_64-linux-ghcup:
  extends: .linux-ghcup
  tags:
    - x86_64-linux

aarch64-linux-ghcup:
  extends: .linux-ghcup
  tags:
    - aarch64-linux

aarch64-darwin-ghcup:
  extends: .ghcup
  tags:
    - aarch64-darwin
  before_script:
    - |
      export HOME=$(mktemp -d)
      trap 'rm -rf "$HOME"' EXIT
    - |
      mkdir wrappers

      echo '#!/bin/sh' >> wrappers/firefox
      echo 'exec "/Applications/Firefox.app/Contents/MacOS/firefox" ${1+"$@"}' >> wrappers/firefox
      chmod +x wrappers/firefox

      echo '#!/bin/sh' >> wrappers/google-chrome-stable
      echo 'exec "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ${1+"$@"}' >> wrappers/google-chrome-stable
      chmod +x wrappers/google-chrome-stable

      export PATH=$PATH:$PWD/wrappers
